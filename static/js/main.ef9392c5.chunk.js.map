{"version":3,"sources":["config.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","REACT_APP_DB_URL","projectId","storageBucket","messagingSenderId","appId","measurementId","REACT_APP_MESG_ID","app","firebase","initializeApp","getAnalytics","App","dt","Date","useState","time","setTime","period","setPeriod","date","getMonth","getDay","getFullYear","useEffect","interval","setInterval","toLocaleTimeString","clearInterval","checktime","t","minutes","getMinutes","total","getHours","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAUiBA,G,MAVM,CACnBC,OAAQC,0CACRC,WAAWD,8BACXE,YAAaF,4ZAAYG,iBACzBC,UAAWJ,cACXK,cAAcL,0BACdM,kBAAmBN,cACnBO,MAAOP,2CACPQ,cAAeR,4ZAAYS,oB,wBCFzBC,EAAMC,IAASC,cAAcd,GACjBe,YAAaH,GAyGhBI,MAvGf,WACE,IAAIC,EAAK,IAAIC,KACb,EAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,GAAnC,mBAAKG,EAAL,KAAaC,EAAb,KACA,EAAsBJ,mBAAS,GAA/B,mBACIK,GADJ,UACQ,UAAMP,EAAGQ,WAAa,EAAtB,YAA2BR,EAAGS,SAA9B,YAA0CT,EAAGU,gBAErDC,qBAAU,WACR,IAAIC,EAAWC,aAAY,WACzBT,GAAQ,IAAIH,MAAOa,wBAClB,KACH,OAAO,kBAAMC,cAAcH,MAC1B,IAEHD,qBAAU,WACRK,MACC,CAACb,IAEJ,IAAMa,EAAY,WAChB,IAAIC,EAAI,IAAIhB,KACRiB,EAAUD,EAAEE,aACZnB,EAAGmB,aAAe,KACpBD,EAAU,IAAMA,GAGlB,IAAIE,EAAQH,EAAEI,WAAa,GAAKH,EAE9BZ,EADEc,GAAS,KAAOA,GAAS,IACjB,EACDA,GAAS,KAAOA,GAAS,IACxB,EACDA,GAAS,KAAOA,GAAS,IACxB,EACDA,GAAS,KAAOA,GAAS,KACxB,EACDA,GAAS,MAAQA,GAAS,KACzB,EACDA,GAAS,MAAQA,GAAS,KACzB,EACDA,GAAS,MAAQA,GAAS,KACzB,EACDA,GAAS,MAAQA,GAAS,KACzB,EAEA,aAId,OACE,uBAAME,UAAU,wBAAhB,UACE,wBAAQA,UAAU,kEAAlB,SACE,sBAAKA,UAAU,6DAAf,UACA,qBAAKA,UAAU,0BAAf,SACE,oBAAIA,UAAU,4DAAd,yBAKF,qBAAKA,UAAU,0BAAf,SACE,oBAAIA,UAAU,qDAAd,yCAMJ,uBAAMA,UAAU,wBAAhB,UAEE,sBAAKA,UAAU,iEAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,oBAAIA,UAAU,sEAAd,oBAIF,oBAAIA,UAAU,4DAAd,SACGf,OAIL,sBAAKe,UAAU,gEAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,oBAAIA,UAAU,qEAAd,oBAIF,oBAAIA,UAAU,2DAAd,SACGnB,OAIL,sBAAKmB,UAAU,kEAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,oBAAIA,UAAU,uEAAd,sBAIF,oBAAIA,UAAU,6DAAd,SACGjB,cC5FEkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ef9392c5.chunk.js","sourcesContent":["const firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain:process.env.REACT_APP_AUTH_DOM ,\r\n    databaseURL: process.env.REACT_APP_DB_URL,\r\n    projectId: process.env.REACT_APP_PRJ_ID,\r\n    storageBucket:process.env.REACT_APP_STG_BKT ,\r\n    messagingSenderId: process.env.REACT_APP_MSG_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MESG_ID\r\n  };\r\n  export default firebaseConfig;","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport firebaseConfig from \"./config\";\nimport firebase from \"firebase/compat\";\nimport { getAnalytics } from \"firebase/analytics\";\n\nconst app = firebase.initializeApp(firebaseConfig);\nconst anylitics = getAnalytics(app);\n\nfunction App() {\n  let dt = new Date();\n  const [time, setTime] = useState(0);\n  let [period, setPeriod] = useState(0);\n  let [size, setSize] = useState(0);\n  let date = `${dt.getMonth() + 1}/${dt.getDay()}/${dt.getFullYear()}`;\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      setTime(new Date().toLocaleTimeString());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    checktime();\n  }, [time]);\n\n  const checktime = () => {\n    let t = new Date();\n    let minutes = t.getMinutes();\n    if (dt.getMinutes() < 10) {\n      minutes = \"0\" + minutes;\n    }\n\n    let total = t.getHours() + \"\" + minutes;\n    if (total >= 720 && total <= 806) {\n      setPeriod(1);\n    } else if (total >= 806 && total <= 857) {\n      setPeriod(2);\n    } else if (total >= 902 && total <= 951) {\n      setPeriod(3);\n    } else if (total >= 956 && total <= 1042) {\n      setPeriod(4);\n    } else if (total >= 1047 && total <= 1207) {\n      setPeriod(5);\n    } else if (total >= 1212 && total <= 1258) {\n      setPeriod(6);\n    } else if (total >= 1303 && total <= 1349) {\n      setPeriod(7);\n    } else if (total >= 1354 && total <= 1440) {\n      setPeriod(8);\n    } else {\n      setPeriod(\"off time\");\n    }\n  };\n\n  return (\n    <main className=\"h-screen bg-green-200\">\n      <header className=\"bg-yellow-600 p-3 text-center rounded-b-3xl mb-6 justify-center\">\n        <div className=\"bg-yellow-400 p-1.5 text-center rounded-3xl justify-center\">\n        <div className=\"flex justify-center p-2\">\n          <h1 className=\" text-3xl font-bold rounded-3xl px-10 p-3 bg-yellow-200  \">\n            MISD Time\n          </h1>\n        </div>\n      \n        <div className=\"flex justify-center p-2\">\n          <h1 className=\"rounded-3xl px-5 p-2 bg-yellow-200 font font-light\">\n            Made By Drew Ronsman\n          </h1>\n        </div>\n        </div>\n      </header>\n      <body className=\"bg-green-200 h-screen\">\n        \n        <div className=\"bg-blue-800 text-center p-3 rounded-3xl mb-5 container mx-auto\">\n          <div className=\"flex justify-center p-2\">\n            <h1 className=\" text-3xl text-bold rounded-3xl px-5 p-3 bg-blue-300 font font-bold\">\n              Date\n            </h1>\n          </div>\n          <h3 className=\"text-2xl text-bold bg-blue-200 rounded-3xl p-2 font-light\">\n            {date}\n          </h3>\n        </div>\n\n        <div className=\"bg-red-800 text-center p-3 rounded-3xl mb-5 container mx-auto\">\n          <div className=\"flex justify-center p-2\">\n            <h1 className=\" text-3xl text-bold rounded-3xl px-5 p-3 bg-red-300 font font-bold\">\n              Time\n            </h1>\n          </div>\n          <h3 className=\"text-2xl text-bold bg-red-200 rounded-3xl p-2 font-light\">\n            {time}\n          </h3>\n        </div>\n\n        <div className=\"bg-green-800 text-center p-3 rounded-3xl mb-5 container mx-auto\">\n          <div className=\"flex justify-center p-2\">\n            <h1 className=\" text-3xl text-bold rounded-3xl px-5 p-3 bg-green-300 font font-bold\">\n              Period\n            </h1>\n          </div>\n          <h3 className=\"text-2xl text-bold bg-green-200 rounded-3xl p-2 font-light\">\n            {period}\n          </h3>\n        </div>\n      </body>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}