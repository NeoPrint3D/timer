{"version":3,"sources":["config.js","App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","REACT_APP_DB_URL","projectId","storageBucket","messagingSenderId","appId","measurementId","REACT_APP_MESG_ID","app","firebase","initializeApp","InfoCard","props","color","title","text","image","className","src","alt","getAnalytics","App","dt","Date","useState","apiData","setApiData","time","setTime","period","setPeriod","timeleft","setTimeleft","endMin","date","getMonth","getDay","getFullYear","apiUrl","useEffect","fetch","then","res","json","data","interval","setInterval","toLocaleTimeString","clearInterval","checktime","total","getHours","getMinutes","main","Math","round","temp","weather","icon","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41f16cc9.chunk.js","sourcesContent":["const firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain:process.env.REACT_APP_AUTH_DOM ,\r\n    databaseURL: process.env.REACT_APP_DB_URL,\r\n    projectId: process.env.REACT_APP_PRJ_ID,\r\n    storageBucket:process.env.REACT_APP_STG_BKT ,\r\n    messagingSenderId: process.env.REACT_APP_MSG_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MESG_ID\r\n  };\r\n  export default firebaseConfig;","import { useState, useEffect } from \"react\";\nimport firebaseConfig from \"./config\";\nimport firebase from \"firebase/compat/app\";\nimport { getAnalytics } from \"firebase/analytics\";\n\nconst app = firebase.initializeApp(firebaseConfig);\ngetAnalytics(app);\n\nfunction App() {\n  let dt = new Date(); //example time 'December 17, 1995 09:52:00'\n  const [apiData, setApiData] = useState({});\n  const [time, setTime] = useState(\"Loading...\");\n  let [period, setPeriod] = useState(\"Loading...\");\n  let [timeleft, setTimeleft] = useState(\"Loading...\");\n  const endMin = [486, 537, 591, 642, 727, 778, 829, 880];\n  let date = `${dt.getMonth() + 1}/${dt.getDay()}/${dt.getFullYear()}`;\n\n  const apiKey = process.env.REACT_APP_W_API_KEY;\n  const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=Conroe,Texas&units=imperial&appid=${apiKey}`;\n\n  useEffect(() => {\n    fetch(apiUrl)\n      .then((res) => res.json())\n      .then((data) => setApiData(data));\n  }, [apiUrl]);\n  useEffect(() => {\n    let interval = setInterval(() => {\n      setTime(new Date().toLocaleTimeString());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    checktime();\n    // eslint-disable-next-line\n  }, [time]);\n\n  const checktime = () => {\n    //gets period\n    let total =\n      dt.getHours() +\n      \"\" +\n      (dt.getMinutes() < 10 ? \"0\" + dt.getMinutes() : dt.getMinutes());\n\n  \n    if (total >= 720 && total <= 1440) {\n      if (total >= 720 && total <= 806) {\n        setPeriod(1);\n      } else if (total >= 811 && total <= 857) {\n        setPeriod(2);\n      } else if (total >= 902 && total <= 951) {\n        setPeriod(3);\n      } else if (total >= 956 && total <= 1042) {\n        setPeriod(4);\n      } else if (total >= 1047 && total <= 1207) {\n        setPeriod(5);\n      } else if (total >= 1212 && total <= 1258) {\n        setPeriod(6);\n      } else if (total >= 1303 && total <= 1349) {\n        setPeriod(7);\n      } else if (total >= 1354 && total <= 1440) {\n        setPeriod(8);\n      } else {\n        setPeriod(\"In between bells\");\n      }\n    }\n    //time left\n    if (total >= 720 && total <= 1440) {\n      if (period === 1) {\n        setTimeleft(`${endMin[0] -(dt.getHours() * 60 + dt.getMinutes())} min`);\n      } else if (period !== \"In between bells\") {\n        setTimeleft(`${endMin[period - 1] - (dt.getHours() * 60 + dt.getMinutes())} min`);\n      } else {\n        setTimeleft(\"You made it on time\");\n      }\n    }\n\n  };\n  return (\n    <div className=\"bg-green-300 h-screen bg-scroll\">\n      <header>\n        <div className=\"bg-yellow-400 p-1 text-center rounded-3xl mb-5\">\n          <div className=\" rounded-3xl px-5 p-2 bg-yellow-200 mt-3  \">\n          <h4 className=\" text-3xl font-bold\">\n            MISD Time\n          </h4>\n          \n        </div>\n          <div className=\"flex justify-center p-2\">\n          <h1 className=\"rounded-3xl px-5 p-2 bg-yellow-200 font font-light \">\n              Made By Drew Ronsman\n            </h1>\n          </div>\n        </div>\n      </header>\n      <div>\n        <div className=\"justify-evenly flex\">\n          <InfoCard color=\"blue\" title=\"Date\" text={date} />\n          <InfoCard color=\"red\" title=\"Time\" text={time} />\n          <InfoCard color=\"green\" title=\"Period\" text={period} />\n        </div>\n        <div className=\"justify-evenly flex\">\n          <InfoCard\n            color=\"purple\"\n            title=\"Weather\"\n            text={\n              apiData.main ? `${Math.round(apiData.main.temp)} Â°F` : \"loading\"\n            }\n            image={apiData.weather ? (`http://openweathermap.org/img/w/${apiData.weather[0].icon}.png`):(0)} \n          />\n\n          <InfoCard color=\"pink\" title=\"Time Left\" text={timeleft} />\n        </div>\n      </div>\n     \n    </div>\n  );\n}\n\nfunction InfoCard(props) {\n  const { color, title, text,image } = props;\n  return (\n    <div className={`p-3 lg:p-4 bg-${color}-800 rounded-3xl mb-5`}>\n      <div\n        className={`bg-${color}-600 text-center p-3 lg:p-5 rounded-2xl  mx-auto`}\n      >\n        <div className=\"flex justify-center p-2\">\n          <div className={`bg-${color}-100 p-1 rounded-2xl`}>\n            <h1\n              className={`text-2xl text-bold rounded-2xl  px-10 lg:px-24  p-2 bg-${color}-300 font font-bold`}\n            >\n              {title}\n            </h1>\n          </div>\n        </div>\n        <div className=\"flex justify-evenly\">\n          <div className=\"flex place-items-center\">\n          <h3\n            className={`text-xl text-bold bg-${props.color}-200 rounded-3xl lg:px-10 p-3 px-3 font-light text-justify`}\n          >\n            {text}\n          </h3>\n          </div>\n          {image ? (<img className={`bg-${props.color}-300 p-0.5 rounded-full`} src={image} alt=\"\"></img>):(<></>)}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}