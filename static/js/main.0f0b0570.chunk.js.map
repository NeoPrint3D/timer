{"version":3,"sources":["config.js","components/InfoCards.js","App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","REACT_APP_DB_URL","projectId","storageBucket","messagingSenderId","appId","measurementId","REACT_APP_MESG_ID","InfoCard","props","title","text","image","className","src","alt","app","firebase","initializeApp","getAnalytics","App","useState","Date","toLocaleDateString","date","setDate","apiData","setApiData","time","setTime","period","setPeriod","timeleft","setTimeleft","selectedOption","setSelectedOption","endOf","setEndOf","startOf","setStartOf","apiUrl","useEffect","fetch","then","res","json","data","interval","setInterval","toLocaleTimeString","clearInterval","checktime","total","getHours","getMinutes","length","value","onChange","e","target","main","Math","round","temp","weather","icon","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f0b0570.chunk.js","sourcesContent":["const firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain:process.env.REACT_APP_AUTH_DOM ,\r\n    databaseURL: process.env.REACT_APP_DB_URL,\r\n    projectId: process.env.REACT_APP_PRJ_ID,\r\n    storageBucket:process.env.REACT_APP_STG_BKT ,\r\n    messagingSenderId: process.env.REACT_APP_MSG_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MESG_ID\r\n  };\r\n  export default firebaseConfig;","function InfoCard(props) {\r\n    const {title, text, image } = props;\r\n    return (\r\n      <div className={`bg-blue-600 p-2 lg:p-3 rounded-3xl mb-5 place-items-center`}>\r\n        <div\r\n          className={`bg-yellow-400 text-center p-2 sm:p-3 lg:p-5 rounded-2xl  mx-auto text `}\r\n        >\r\n          <div className=\"flex justify-center p-2\">\r\n            <div className={`bg-yellow-100 p-1 rounded-2xl`}>\r\n              <h1\r\n                className={`bg-blue-300 sm:text-2xl text-bold rounded-2xl  px-3 sm:px-10 lg:px-24  p-1  md:px-16 font font-bold text-sm`}\r\n              >\r\n                {title}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex justify-evenly\">\r\n            <div className=\"flex place-items-center\">\r\n            <h3\r\n              className={`bg-yellow-100 sm:text-xl text-xs text-bold rounded-3xl lg:px-10 p-1 sm:p-3 px-3 font-light text-justify`}\r\n            >\r\n              {text}\r\n            </h3>\r\n            </div>\r\n            {image ? (<img className={`bg-yellow-100 p-0.5 rounded-full w-8 h-8 sm:w-16 sm:h-16` } src={image} alt=\"\"></img>):(<></>)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\nexport default InfoCard;  ","import { useState, useEffect } from 'react';\nimport firebaseConfig from './config';\nimport firebase from 'firebase/compat/app';\nimport { getAnalytics } from 'firebase/analytics';\nimport InfoCard from './components/InfoCards';\nconst app = firebase.initializeApp(firebaseConfig);\ngetAnalytics(app);\nfunction App() {\n   //example time 'December 17, 1995 09:52:00'\n  const [date, setDate] = useState(new Date().toLocaleDateString());\n  const [apiData, setApiData] = useState({});\n  const [time, setTime] = useState('Loading...');\n  const [period, setPeriod] = useState('Loading...');\n  const [timeleft, setTimeleft] = useState('Loading...');\n  const [selectedOption, setSelectedOption] = useState('Regular');\n\n  const [endOf, setEndOf] = useState([]);\n  const [startOf, setStartOf] = useState([]);\n\n  const apiKey = process.env.REACT_APP_W_API_KEY;\n  const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=Conroe,Texas&units=imperial&appid=${apiKey}`;\n\n  useEffect(() => {\n    fetch(apiUrl)\n      .then((res) => res.json())\n      .then((data) => setApiData(data));\n  }, [apiUrl]);\n  useEffect(() => {\n    setDate(new Date().toLocaleDateString());\n    let interval = setInterval(() => {\n      setTime(new Date().toLocaleTimeString());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    checktime();\n    // eslint-disable-next-line\n  }, [time]);\n  useEffect(() => {\n    const endMin = [486, 537, 591, 642, 727, 778, 829, 880];\n    const startMin = [440, 491, 542, 596, 647, 732, 783, 834];\n    const endActMin = [481, 527, 578, 624, 709, 758, 804, 850, 880];\n    const startActMin = [440, 486, 532, 583, 629, 717, 763, 809, 850];\n\n    if (selectedOption === 'Regular') {\n      setEndOf(endMin);\n      setStartOf(startMin);\n    } else if (selectedOption === 'Activity') {\n      setEndOf(endActMin);\n      setStartOf(startActMin);\n    }\n  }, [selectedOption]);\n  const checktime = () => {\n    //gets period\n\n    let total = new Date().getHours() * 60 + new Date().getMinutes();\n\n    if (total >= startOf[0] && total <= endOf[7]) {\n      if (total >= startOf[0] && total <= endOf[0]) {\n        setPeriod(1);\n      } else if (total >= startOf[1] && total <= endOf[1]) {\n        setPeriod(2);\n      } else if (total >= startOf[2] && total <= endOf[2]) {\n        setPeriod(3);\n      } else if (total >= startOf[3] && total <= endOf[3]) {\n        setPeriod(4);\n      } else if (total >= startOf[4] && total <= endOf[4]) {\n        setPeriod(5);\n      } else if (total >= startOf[5] && total <= endOf[5]) {\n        setPeriod(6);\n      } else if (total >= startOf[6] && total <= endOf[6]) {\n        setPeriod(7);\n      } else if (total >= startOf[7] && total <= endOf[7]) {\n        setPeriod(8);\n      } else if (startOf.length === 9 && endOf.length === 9) {\n        if (total >= startOf[8] && total <= endOf[8]) {\n          setPeriod('Activity');\n        }\n      } else {\n        setPeriod('In between bells');\n      }\n    }\n    //time left\n    if (total >= startOf[0] && total <= endOf[7]) {\n      if (period === 1) {\n        setTimeleft(`${endOf[0] - total} min`);\n      } else if (period !== 'In between bells') {\n        setTimeleft(`${endOf[period - 1] - total} min`);\n      } else {\n        setTimeleft('You made it on time');\n      }\n    }\n  };\n  return (\n    <div className='bg-blue-800 h-screen '>\n      <header className=\"bg-blue-600 px-3 pb-3 rounded-b-3xl mb-5\">\n        <div className={`bg-yellow-400 p-1 text-center rounded-b-3xl `}>\n          <div className={` rounded-3xl px-5 p-2 bg-yellow-200 mt-3`}>\n            <h4 className={` text-3xl font-bold`}>MISD Time</h4>\n          </div>\n          <div className={`flex justify-center p-2`}>\n            <select\n              className={`rounded-3xl px-5 p-2 bg-yellow-200 font font-light`}\n              value={selectedOption}\n              onChange={(e) => setSelectedOption(e.target.value)}\n            >\n              <option value='Regular'>Regular</option>\n              <option value='Activity'>Activity</option>\n            </select>\n            <h5\n              className={`rounded-3xl px-5 p-2 bg-yellow-200 font font-light mx-3`}\n              >\n              Made By Drew Ronsman\n            </h5>\n          </div>\n        </div>\n      </header>\n      <div className={`items-center`}>\n        <div className={`justify-evenly flex place-items-center`}>\n          <InfoCard title={`Date`} text={date} />\n          <InfoCard title={`Time`} text={time} />\n          <InfoCard  title={`Period`} text={period} />\n        </div>\n        <div className={`justify-evenly flex place-items-center `}>\n          <InfoCard\n            \n            title={`Weather`}\n            text={\n              apiData.main ? `${Math.round(apiData.main.temp)} °F` : `loading`\n            }\n            image={\n              apiData.weather\n                ? `http://openweathermap.org/img/w/${apiData.weather[0].icon}.png`\n                : 0\n            }\n          />\n          <InfoCard title={`Ends in`} text={timeleft} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport './index.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}