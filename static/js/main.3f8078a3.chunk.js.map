{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","dt","Date","useState","toLocaleTimeString","time","setTime","period","useEffect","interval","setInterval","clearInterval","className","getMonth","getDate","getFullYear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAkIeA,MA/Hf,WACE,IAAIC,EAAK,IAAIC,KACb,EAAqBC,mBAASF,EAAGG,sBAAjC,mBAAKC,EAAL,KAAUC,EAAV,KACIC,EAAS,EAWb,OATAC,qBAAU,WACR,IAAIC,EAAWC,aAAY,WACzBJ,GAAQ,IAAIJ,MAAOE,wBAClB,IAAOG,GACV,OAAO,kBAAMI,cAAcF,MAC1B,IACY,YAATJ,IACJE,EAAO,GAEDF,GACN,IAAK,UACHE,EAAS,EACT,MACF,IAAK,UACHA,EAAS,EACT,MACF,IAAK,UACHA,EAAS,EACT,MACF,IAAK,UACHA,EAAS,EACT,MACF,IAAK,WACHA,EAAS,EACT,MACF,IAAK,WACHA,EAAS,EACT,MACF,IAAK,UACHA,EAAS,EACT,MACF,IAAK,UACHA,EAAS,EACT,MACF,IAAK,UACHA,EAAO,eAQX,OACE,sBAAKK,UAAU,wBAAf,UACE,wBAAQA,UAAU,iDAAlB,SACE,oBAAIA,UAAU,mDAAd,yBAIF,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,+CAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,oBAAIA,UAAU,sEAAd,oBAIF,qBAAIA,UAAU,mDAAd,UACGX,EAAGY,WADN,IACmBZ,EAAGa,UADtB,IACkCb,EAAGc,oBAKvC,sBAAKH,UAAU,8CAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,oBAAIA,UAAU,mEAAd,oBAIF,oBAAIA,UAAU,gDAAd,SACGP,OAcL,sBAAKO,UAAU,2CAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,oBAAIA,UAAU,qEAAd,sBAIF,oBAAIA,UAAU,kDAAd,SACGL,cCvFES,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3f8078a3.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  let dt = new Date();\n  let [time,setTime] = useState(dt.toLocaleTimeString());\n  let period = 1;\n \n  useEffect(() => {\n    let interval = setInterval(() => {\n      setTime(new Date().toLocaleTimeString());\n    }, 1000 * period);\n    return () => clearInterval(interval);\n  }, []);\n    if (time === \"7:20:00\") {\n    period=1;\n  }\n  switch (time) {\n    case \"7:20:00\":\n      period = 1;\n      break;\n    case \"8:11:00\":\n      period = 2;\n      break;\n    case \"9:02:00\":\n      period = 3;\n      break;\n    case \"9:56:00\":\n      period = 4;\n      break;\n    case \"10:47:00\":\n      period = 5;\n      break;\n    case \"12:12:00\":\n      period = 6;\n      break;\n    case \"1:03:00\":\n      period = 7;\n      break;\n    case \"1:54:00\":\n      period = 8;\n      break;\n    case \"2:45:00\":\n      period=\"schools out!\"\n      break;\n    default:\n  }\n\n\n\n\n  return (\n    <div className=\"bg-green-200 h-screen\">\n      <header className=\" bg-yellow-400 p-6 text-center rounded-xl mb-6\">\n        <h1 className=\"text-2xl font-bold bg-yellow-200 p-2 rounded-2xl\">\n          Timer App\n        </h1>\n      </header>\n      <div className=\"items-center\">\n        <div className=\"bg-blue-800 text-center p-5 rounded-3xl mb-5\">\n          <div className=\"flex justify-center p-2\">\n            <h1 className=\" flex-initial text-3xl text-bold rounded-3xl px-5 p-3 bg-purple-300\">\n              Date\n            </h1>\n          </div>\n          <h3 className=\"text-2xl text-bold bg-indigo-200 rounded-3xl p-2\">\n            {dt.getMonth()}/{dt.getDate()}/{dt.getFullYear()}\n          </h3>\n        </div>\n\n\n        <div className=\"bg-red-800 text-center p-5 rounded-3xl mb-5\" >\n          <div className=\"flex justify-center p-2\">\n            <h1 className=\" flex-initial text-3xl text-bold rounded-3xl px-5 p-3 bg-red-300\">\n              Time\n            </h1>\n          </div>\n          <h3 className=\"text-2xl text-bold bg-red-200 rounded-3xl p-2\">\n            {time}\n          </h3>\n        </div>\n\n\n\n\n\n\n\n\n\n\n\n        <div className=\"bg-green-800 text-center p-5 rounded-3xl\">\n          <div className=\"flex justify-center p-2\">\n            <h1 className=\" flex-initial text-3xl text-bold rounded-3xl px-5 p-3 bg-green-300\">\n              Period\n            </h1>\n          </div>\n          <h3 className=\"text-2xl text-bold bg-green-200 rounded-3xl p-2\">\n            {period}\n          </h3>\n        </div>\n\n\n\n\n\n\n      </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n    </div>\n\n\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}