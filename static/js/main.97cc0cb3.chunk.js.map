{"version":3,"sources":["config.js","img.png","App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","REACT_APP_DB_URL","projectId","storageBucket","messagingSenderId","appId","measurementId","REACT_APP_MESG_ID","app","firebase","initializeApp","InfoCard","props","title","text","image","size","className","src","alt","getAnalytics","App","useState","Date","toLocaleDateString","date","setDate","apiData","setApiData","time","setTime","period","setPeriod","timeleft","setTimeleft","selectedOption","setSelectedOption","quote","setQuote","endOf","setEndOf","startOf","setStartOf","apiUrl","useEffect","fetch","then","res","json","data","interval","setInterval","toLocaleTimeString","clearInterval","checktime","Math","floor","random","length","total","getHours","getMinutes","value","onChange","e","target","style","backgroundImage","img","backgroundRepeat","backgroundPositionX","backgroundSize","main","round","temp","weather","icon","author","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97cc0cb3.chunk.js","sourcesContent":["const firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain:process.env.REACT_APP_AUTH_DOM ,\r\n    databaseURL: process.env.REACT_APP_DB_URL,\r\n    projectId: process.env.REACT_APP_PRJ_ID,\r\n    storageBucket:process.env.REACT_APP_STG_BKT ,\r\n    messagingSenderId: process.env.REACT_APP_MSG_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MESG_ID\r\n  };\r\n  export default firebaseConfig;","export default __webpack_public_path__ + \"static/media/img.20ce4e42.png\";","import { useState, useEffect } from \"react\";\nimport firebaseConfig from \"./config\";\nimport firebase from \"firebase/compat/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport \"./App.css\";\nimport img from \"./img.png\";\nconst app = firebase.initializeApp(firebaseConfig);\ngetAnalytics(app);\nfunction App() {\n  //example time 'December 17, 1995 09:52:00'\n  const [date, setDate] = useState(new Date().toLocaleDateString());\n  const [apiData, setApiData] = useState({});\n  const [time, setTime] = useState(\"Loading...\");\n  const [period, setPeriod] = useState(\"Loading...\");\n  const [timeleft, setTimeleft] = useState(\"Loading...\");\n  const [selectedOption, setSelectedOption] = useState(\"Regular\");\n  const [quote, setQuote] = useState(\"Loading...\");\n\n  const [endOf, setEndOf] = useState([]);\n  const [startOf, setStartOf] = useState([]);\n\n  const apiKey = process.env.REACT_APP_W_API_KEY;\n  const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=Conroe,Texas&units=imperial&appid=${apiKey}`;\n\n  useEffect(() => {\n    fetch(apiUrl)\n      .then((res) => res.json())\n      .then((data) => setApiData(data));\n  }, [apiUrl]);\n  useEffect(() => {\n    setDate(new Date().toLocaleDateString());\n    let interval = setInterval(() => {\n      setTime(new Date().toLocaleTimeString());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    checktime();\n    // eslint-disable-next-line\n  }, [time]);\n  useEffect(() => {\n    const endMin = [486, 537, 591, 642, 727, 778, 829, 880];\n    const startMin = [440, 491, 542, 596, 647, 732, 783, 834];\n\n    const endActMin = [481, 527, 578, 624, 709, 758, 804, 850, 880];\n    const startActMin = [440, 486, 532, 583, 629, 717, 763, 809, 850];\n\n    if (selectedOption === \"Regular\") {\n      setEndOf(endMin);\n      setStartOf(startMin);\n    } else if (selectedOption === \"Activity\") {\n      setEndOf(endActMin);\n      setStartOf(startActMin);\n    }\n  }, [selectedOption]);\n  useEffect(() => {\n    fetch(\"https://type.fit/api/quotes\")\n      .then((res) => res.json())\n      .then((data) => {\n        setQuote(data[Math.floor(Math.random() * data.length)]);\n      });\n  }, []);\n\n  const checktime = () => {\n    //gets period\n\n    let total = new Date().getHours() * 60 + new Date().getMinutes();\n\n    if (total >= startOf[0] && total <= endOf[7]) {\n      if (total >= startOf[0] && total <= endOf[0]) {\n        setPeriod(1);\n      } else if (total >= startOf[1] && total <= endOf[1]) {\n        setPeriod(2);\n      } else if (total >= startOf[2] && total <= endOf[2]) {\n        setPeriod(3);\n      } else if (total >= startOf[3] && total <= endOf[3]) {\n        setPeriod(4);\n      } else if (total >= startOf[4] && total <= endOf[4]) {\n        setPeriod(5);\n      } else if (total >= startOf[5] && total <= endOf[5]) {\n        setPeriod(6);\n      } else if (total >= startOf[6] && total <= endOf[6]) {\n        setPeriod(7);\n      } else if (total >= startOf[7] && total <= endOf[7]) {\n        setPeriod(8);\n      } else if (startOf.length === 9 && endOf.length === 9) {\n        if (total >= startOf[8] && total <= endOf[8]) {\n          setPeriod(\"Activity\");\n        }\n      } else {\n        setPeriod(\"In between bells\");\n      }\n    }\n    //time left\n    if (total >= startOf[0] && total <= endOf[7]) {\n      if (period === 1) {\n        setTimeleft(`${endOf[0] - total} min`);\n      } else if (period !== \"In between bells\") {\n        setTimeleft(`${endOf[period - 1] - total} min`);\n      } else {\n        setTimeleft(\"You made it on time\");\n      }\n    }\n  };\n  return (\n    <div className=\"blue\">\n      <header className=\"border-white yellow px-2 pb-3 rounded-b-3xl text-md font-light\">\n        <div className=\"flex justify-center \">\n          <h5\n            className={`px-32 text-center text-3xl font-bold bg-white rounded-3xl p-3 mt-3 `}\n          >\n            Lake Creek\n          </h5>\n        </div>\n        <div className=\"flex justify-center mt-3\">\n          <select\n            className={`rounded-3xl p-2 bg-white mr-3`}\n            value={selectedOption}\n            onChange={(e) => setSelectedOption(e.target.value)}\n          >\n            <option value=\"Regular\">Regular</option>\n            <option value=\"Activity\">Activity</option>\n          </select>\n        </div>\n      </header>\n      <div\n        style={{\n          backgroundImage: `url(${img})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundPositionX: \"center\",\n          backgroundSize: \"350px\",\n        }}\n        alt=\"lake\"\n        className={`h-screen `}\n      >\n        <div\n          className={`justify-evenly grid gap-x-5 gap-y-4 grid-cols-3 place-items-center mt-3`}\n        >\n          <InfoCard title={`Time`} text={time} />\n          <InfoCard\n            title={`Weather`}\n            text={\n              apiData.main ? `${Math.round(apiData.main.temp)} Â°F` : `loading`\n            }\n            image={\n              apiData.weather\n                ? `http://openweathermap.org/img/w/${apiData.weather[0].icon}.png`\n                : 0\n            }\n          />\n          <InfoCard title={`Date`} text={date} />\n          <InfoCard title={`Period`} text={period} />\n          <InfoCard\n            title={`Quote`}\n            text={`${quote.text} -${quote.author || \"unknown\"}`}\n            size=\"text-xs\"\n          />\n          <InfoCard title={`Class Ends`} text={timeleft} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction InfoCard(props) {\n  let { title, text, image, size } = props;\n  size = size || \"text-xl\";\n  return (\n    <div\n      className={`yellow text-center p-2 sm:p-2 lg:p-3 rounded-2xl  mx-auto transparent  border-white`}\n    >\n      <h1\n        className={`bg-white sm:text-2xl text-bold rounded-2xl  px-3 sm:px-10 lg:px-24  p-1 sm:p-3 mb-2 md:px-14 font-bold text-sm `}\n      >\n        {title}\n      </h1>\n\n      <div className=\"flex justify-evenly place-items-center\">\n        <h3\n          className={`bg-white sm:${size} text-xs  rounded-3xl lg:px-10 p-1 sm:p-3 px-3  text-justify`}\n        >\n          {text}\n        </h3>\n        {image ? (\n          <img\n            className={`bg-white p-0.5 rounded-full w-8 h-8 sm:w-16 sm:h-16 `}\n            src={image}\n            alt=\"\"\n          ></img>\n        ) : (\n          <></>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport './index.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}