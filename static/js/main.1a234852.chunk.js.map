{"version":3,"sources":["config.js","img.png","App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","REACT_APP_DB_URL","projectId","storageBucket","messagingSenderId","appId","measurementId","REACT_APP_MESG_ID","app","firebase","initializeApp","InfoCard","props","title","text","image","size","imground","className","src","alt","getAnalytics","App","useState","Date","toLocaleDateString","date","setDate","apiData","setApiData","time","setTime","period","setPeriod","timeleft","setTimeleft","selectedOption1","setSelectedOption1","selectedOption2","setSelectedOption2","meme","setMeme","quote","setQuote","endOf","setEndOf","startOf","setStartOf","useEffect","fetch","then","res","json","data","interval","setInterval","toLocaleTimeString","clearInterval","checktime","getMeme","getQuote","a","rand","Math","floor","random","querystring","response","length","total","getHours","getMinutes","Fragment","value","onChange","e","target","style","backgroundImage","img","backgroundRepeat","backgroundPositionX","backgroundSize","main","round","temp","weather","icon","author","url","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAUiBA,EAVM,CACnBC,OAAQC,0CACRC,WAAWD,8BACXE,YAAaF,mdAAYG,iBACzBC,UAAWJ,cACXK,cAAcL,0BACdM,kBAAmBN,cACnBO,MAAOP,2CACPQ,cAAeR,mdAAYS,mB,gBCRhB,G,MAAA,IAA0B,iC,OCenCC,EAAMC,IAASC,cAAcd,GA+MnC,SAASe,EAASC,GAChB,IAAMC,EAA6BD,EAA7BC,MAAOC,EAAsBF,EAAtBE,KAAMC,EAAgBH,EAAhBG,MAAOC,EAASJ,EAATI,KACtBC,EAAW,eAMf,MALc,UAAVJ,IACFI,EAAW,cAGbD,EAAOA,GAAQ,UAEb,qBACEE,UAAS,qFADX,SAGE,qBAAKA,UAAU,yCAAf,SACa,UAAVL,EACC,8BACE,qBACEK,UAAS,mBAAcD,EAAd,cACTE,IAAKJ,EACLK,IAAI,OAIR,gCACE,oBACEF,UAAS,kHADX,SAGGL,IAEH,sBAAKK,UAAU,yCAAf,UACE,oBACEA,UAAS,sBAAiBF,EAAjB,oDADX,SAGGF,IAEFC,EACC,qBACEG,UAAS,yBAAoBD,EAApB,kCACTE,IAAKJ,EACLK,IAAI,KAGN,uCAvPhBC,YAAab,GAiQEc,MAhQf,WAEE,MAAwBC,oBAAS,IAAIC,MAAOC,sBAA5C,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwBN,mBAAS,cAAjC,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAA4BR,mBAAS,cAArC,mBAAOS,EAAP,KAAeC,EAAf,KACA,EAAgCV,mBAAS,cAAzC,mBAAOW,EAAP,KAAiBC,EAAjB,KACA,EAA8CZ,mBAAS,WAAvD,mBAAOa,EAAP,KAAwBC,EAAxB,KACA,EAA8Cd,mBAAS,SAAvD,mBAAOe,EAAP,KAAwBC,EAAxB,KACA,EAAwBhB,mBAAS,cAAjC,mBAAOiB,EAAP,KAAaC,EAAb,KACA,EAA0BlB,mBAAS,cAAnC,mBAAOmB,EAAP,KAAcC,EAAd,KAEA,EAA0BpB,mBAAS,IAAnC,mBAAOqB,EAAP,KAAcC,EAAd,KACA,EAA8BtB,mBAAS,IAAvC,mBAAOuB,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACRC,MAAM,uFAAD,OACoFnD,qCAEtFoD,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUxB,EAAWwB,QAC5B,IACHL,qBAAU,WACRrB,GAAQ,IAAIH,MAAOC,sBACnB,IAAI6B,EAAWC,aAAY,WACzBxB,GAAQ,IAAIP,MAAOgC,wBAClB,KACH,OAAO,kBAAMC,cAAcH,MAC1B,IACHN,qBAAU,WACRU,OAEC,CAAC5B,IACJkB,qBAAU,WAOgB,YAApBZ,GACFS,EAPa,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAQ3DE,EAPe,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAQhC,aAApBX,IACTS,EAPgB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAQzDE,EAPkB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,SAS5D,CAACX,IACJY,qBAAU,WACgB,UAApBV,EACFqB,IAC6B,UAApBrB,GACTsB,MAED,CAACtB,IACJ,IAAMqB,EAAO,uCAAG,gCAAAE,EAAA,6DACVC,EAAOC,KAAKC,MAAsB,GAAhBD,KAAKE,UACrBC,EAFQ,kBAEiBJ,GAFjB,SAGSb,MACrB,4CAA8CiB,GAJlC,OAGRC,EAHQ,OAOd1B,EAAQ0B,GAPM,2CAAH,qDAUPP,EAAQ,uCAAG,4BAAAC,EAAA,sEACeZ,MAAM,+BADrB,8BACqDG,OADrD,OACTe,EADS,OAGfxB,EAASwB,EAASJ,KAAKC,MAAMD,KAAKE,SAAWE,EAASC,UAHvC,2CAAH,qDAMRV,GAAY,WAGhB,IAAIW,EAAgC,IAAxB,IAAI7C,MAAO8C,YAAkB,IAAI9C,MAAO+C,aAChDF,GAASvB,EAAQ,IAAMuB,GAASzB,EAAM,KACpCyB,GAASvB,EAAQ,IAAMuB,GAASzB,EAAM,GACxCX,EAAU,GACDoC,GAASvB,EAAQ,IAAMuB,GAASzB,EAAM,GAC/CX,EAAU,GACDoC,GAASvB,EAAQ,IAAMuB,GAASzB,EAAM,GAC/CX,EAAU,GACDoC,GAASvB,EAAQ,IAAMuB,GAASzB,EAAM,GAC/CX,EAAU,GACDoC,GAASvB,EAAQ,IAAMuB,GAASzB,EAAM,GAC/CX,EAAU,WACDoC,GAASvB,EAAQ,IAAMuB,GAASzB,EAAM,GAC/CX,EAAU,WACDoC,GAASvB,EAAQ,IAAMuB,GAASzB,EAAM,GAC/CX,EAAU,WACDoC,GAASvB,EAAQ,IAAMuB,GAASzB,EAAM,GAC/CX,EAAU,GACDoC,GAASvB,EAAQ,IAAMuB,GAASzB,EAAM,GAC/CX,EAAU,GACDoC,GAASvB,EAAQ,IAAMuB,GAASzB,EAAM,GAC/CX,EAAU,GACkB,KAAnBa,EAAQsB,QAAkC,KAAjBxB,EAAMwB,OACpCC,GAASvB,EAAQ,KAAOuB,GAASzB,EAAM,KACzCX,EAAU,YAGZA,EAAU,qBAIVoC,GAASvB,EAAQ,IAAMuB,GAASzB,EAAM,KACzB,IAAXZ,EACFG,EAAY,GAAD,OAAIS,EAAM,GAAKyB,EAAf,SACS,qBAAXrC,EACLA,GAAU,EACZG,EAAY,GAAD,OAAIS,EAAMZ,EAAS,GAAKqC,EAAxB,SACS,eAAXrC,GACTG,EAAY,UAGdA,EAAY,yBAIlB,OACE,cAAC,IAAMqC,SAAP,UACE,sBAAKtD,UAAU,QAAf,UACE,sBAAKA,UAAU,8DAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,oBACEA,UAAS,sEADX,0BAMF,sBAAKA,UAAU,2BAAf,UACE,yBACEA,UAAS,gCACTuD,MAAOrC,EACPsC,SAAU,SAACC,GAAD,OAAOtC,EAAmBsC,EAAEC,OAAOH,QAH/C,UAKE,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,yBAEF,yBACEvD,UAAS,gCACTuD,MAAOnC,EACPoC,SAAU,SAACC,GAAD,OAAOpC,EAAmBoC,EAAEC,OAAOH,QAH/C,UAKE,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,4BAIN,qBACEI,MAAO,CACLC,gBAAgB,OAAD,OAASC,EAAT,KACfC,iBAAkB,YAClBC,oBAAqB,SACrBC,eAAgB,SAElB9D,IAAI,OACJF,UAAS,OARX,SAUE,sBACEA,UAAS,0EADX,UAGE,cAACP,EAAD,CAAUE,MAAK,OAAUC,KAAMgB,IAC/B,cAACnB,EAAD,CACEE,MAAK,UACLC,KACEc,EAAQuD,KAAR,UAAkBpB,KAAKqB,MAAMxD,EAAQuD,KAAKE,MAA1C,oBAEFtE,MACEa,EAAQ0D,QAAR,0CACuC1D,EAAQ0D,QAAQ,GAAGC,KAD1D,QAEI,IAGR,cAAC5E,EAAD,CAAUE,MAAK,OAAUC,KAAMY,IAC/B,cAACf,EAAD,CAAUE,MAAK,SAAYC,KAAMkB,IACZ,UAApBM,EACC,cAAC3B,EAAD,CACEE,MAAK,QACLC,KAAI,WAAM4B,EAAM5B,KAAZ,cAAsB4B,EAAM8C,QAAU,WAC1CxE,KAAK,YAGP,cAACL,EAAD,CAAUE,MAAM,QAAQE,MAAK,UAAKyB,EAAKiD,OAEzC,cAAC9E,EAAD,CAAUE,MAAK,aAAgBC,KAAMoB,SAGzC,wBAAQhB,UAAU,+DAAlB,SACE,oBAAIA,UAAU,4BAAd,wC,MCzMVwE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.1a234852.chunk.js","sourcesContent":["const firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain:process.env.REACT_APP_AUTH_DOM ,\r\n    databaseURL: process.env.REACT_APP_DB_URL,\r\n    projectId: process.env.REACT_APP_PRJ_ID,\r\n    storageBucket:process.env.REACT_APP_STG_BKT ,\r\n    messagingSenderId: process.env.REACT_APP_MSG_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MESG_ID\r\n  };\r\n  export default firebaseConfig;","export default __webpack_public_path__ + \"static/media/img.20ce4e42.png\";","import { useState, useEffect } from \"react\";\nimport firebaseConfig from \"./config\";\nimport firebase from \"firebase/compat/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport \"./styles/App.css\";\nimport img from \"./img.png\";\nimport React from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nconst app = firebase.initializeApp(firebaseConfig);\ngetAnalytics(app);\nfunction App() {\n  //example time 'December 17, 1995 09:52:00'\n  const [date, setDate] = useState(new Date().toLocaleDateString());\n  const [apiData, setApiData] = useState({});\n  const [time, setTime] = useState(\"Loading...\");\n  const [period, setPeriod] = useState(\"Loading...\");\n  const [timeleft, setTimeleft] = useState(\"Loading...\");\n  const [selectedOption1, setSelectedOption1] = useState(\"Regular\");\n  const [selectedOption2, setSelectedOption2] = useState(\"Quote\");\n  const [meme, setMeme] = useState(\"Loading...\");\n  const [quote, setQuote] = useState(\"Loading...\");\n\n  const [endOf, setEndOf] = useState([]);\n  const [startOf, setStartOf] = useState([]);\n\n  useEffect(() => {\n    fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=Conroe,Texas&units=imperial&appid=${process.env.REACT_APP_W_API_KEY}`\n    )\n      .then((res) => res.json())\n      .then((data) => setApiData(data));\n  }, []);\n  useEffect(() => {\n    setDate(new Date().toLocaleDateString());\n    let interval = setInterval(() => {\n      setTime(new Date().toLocaleTimeString());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    checktime();\n    // eslint-disable-next-line\n  }, [time]);\n  useEffect(() => {\n    const endMin = [486, 537, 591, 642, 667, 697, 727, 778, 829, 880];\n    const startMin = [440, 491, 542, 596, 642, 672, 702, 732, 783, 834];\n\n    const endActMin = [481, 527, 578, 624, 709, 758, 804, 850, 880]; //need to do this\n    const startActMin = [440, 486, 532, 583, 629, 717, 763, 809, 850];\n\n    if (selectedOption1 === \"Regular\") {\n      setEndOf(endMin);\n      setStartOf(startMin);\n    } else if (selectedOption1 === \"Activity\") {\n      setEndOf(endActMin);\n      setStartOf(startActMin);\n    }\n  }, [selectedOption1]);\n  useEffect(() => {\n    if (selectedOption2 === \"Memes\") {\n      getMeme();\n    } else if (selectedOption2 === \"Quote\") {\n      getQuote();\n    }\n  }, [selectedOption2]);\n  const getMeme = async () => {\n    let rand = Math.floor(Math.random() * 23);\n    const querystring = `?number=${rand}`;\n    const response = await fetch(\n      \"https://MemeApi.neoprint777.repl.co/Memes\" + querystring\n    );\n    // update the state\n    setMeme(response);\n  };\n\n  const getQuote = async () => {\n    const response = await (await fetch(\"https://type.fit/api/quotes\")).json();\n    // update the state\n    setQuote(response[Math.floor(Math.random() * response.length)]);\n  };\n\n  const checktime = () => {\n    //gets period\n\n    let total = new Date().getHours() * 60 + new Date().getMinutes();\n    if (total >= startOf[0] && total <= endOf[9]) {\n      if (total >= startOf[0] && total <= endOf[0]) {\n        setPeriod(1);\n      } else if (total >= startOf[1] && total <= endOf[1]) {\n        setPeriod(2);\n      } else if (total >= startOf[2] && total <= endOf[2]) {\n        setPeriod(3);\n      } else if (total >= startOf[3] && total <= endOf[3]) {\n        setPeriod(4);\n      } else if (total >= startOf[4] && total <= endOf[4]) {\n        setPeriod(\"A Lunch\");\n      } else if (total >= startOf[5] && total <= endOf[5]) {\n        setPeriod(\"B Lunch\");\n      } else if (total >= startOf[6] && total <= endOf[6]) {\n        setPeriod(\"C Lunch\");\n      } else if (total >= startOf[7] && total <= endOf[7]) {\n        setPeriod(6);\n      } else if (total >= startOf[8] && total <= endOf[8]) {\n        setPeriod(7);\n      } else if (total >= startOf[9] && total <= endOf[9]) {\n        setPeriod(8);\n      } else if (startOf.length === 10 && endOf.length === 10) {\n        if (total >= startOf[11] && total <= endOf[11]) {\n          setPeriod(\"Activity\");\n        }\n      } else {\n        setPeriod(\"In between bells\");\n      }\n    }\n    //time left\n    if (total >= startOf[0] && total <= endOf[9]) {\n      if (period === 1) {\n        setTimeleft(`${endOf[0] - total} min`);\n      } else if (period !== \"In between bells\") {\n        if (period >= 6) {\n          setTimeleft(`${endOf[period + 1] - total} min`);\n        } else if (period === \"Loading...\") {\n          setTimeleft(`Eat up`);\n        }\n      } else {\n        setTimeleft(\"You made it on time\");\n      }\n    }\n  };\n  return (\n    <React.Fragment>\n      <div className=\"blue \">\n        <div className=\"border-full yellow px-2 pb-3 rounded-3xl text-md font-light\">\n          <div className=\"flex justify-center \">\n            <h5\n              className={`px-32 text-center text-3xl font-bold bg-white rounded-3xl p-3 mt-5 `}\n            >\n              Lake Creek\n            </h5>\n          </div>\n          <div className=\"flex justify-center mt-3\">\n            <select\n              className={`rounded-3xl p-2 bg-white mr-3`}\n              value={selectedOption1}\n              onChange={(e) => setSelectedOption1(e.target.value)}\n            >\n              <option value=\"Regular\">Regular</option>\n              <option value=\"Activity\">Activity</option>\n            </select>\n            <select\n              className={`rounded-3xl p-2 bg-white mr-3`}\n              value={selectedOption2}\n              onChange={(e) => setSelectedOption2(e.target.value)}\n            >\n              <option value=\"Quote\">Quote</option>\n              <option value=\"Memes\">Memes</option>\n            </select>\n          </div>\n        </div>\n        <div\n          style={{\n            backgroundImage: `url(${img})`,\n            backgroundRepeat: \"no-repeat\",\n            backgroundPositionX: \"center\",\n            backgroundSize: \"350px\",\n          }}\n          alt=\"lake\"\n          className={`mt-4`}\n        >\n          <div\n            className={`justify-evenly grid gap-x-5 gap-y-4 grid-cols-3 place-items-center mt-3`}\n          >\n            <InfoCard title={`Time`} text={time} />\n            <InfoCard\n              title={`Weather`}\n              text={\n                apiData.main ? `${Math.round(apiData.main.temp)} °F` : `loading`\n              }\n              image={\n                apiData.weather\n                  ? `http://openweathermap.org/img/w/${apiData.weather[0].icon}.png`\n                  : 0\n              }\n            />\n            <InfoCard title={`Date`} text={date} />\n            <InfoCard title={`Period`} text={period} />\n            {selectedOption2 === \"Quote\" ? (\n              <InfoCard\n                title={`Quote`}\n                text={`\"${quote.text}\" -${quote.author || \"unknown\"}`}\n                size=\"text-xs\"\n              />\n            ) : (\n              <InfoCard title=\"Memes\" image={`${meme.url}`} />\n            )}\n            <InfoCard title={`Class Ends`} text={timeleft} />\n          </div>\n        </div>\n        <footer className=\"flex justify-evenly mt-3 yellow p-2 border-top rounded-t-3xl\">\n          <h5 className=\"bg-white rounded-2xl px-5\">Made by NeoPrint3D</h5>\n        </footer>\n      </div>\n    </React.Fragment>\n  );\n}\n\n// function App() {\n//   return (\n\n//       <Routes>\n//         <Route exact path=\"/\" element={<Home />} />\n//       </Routes>\n//   );\n// }\n\nfunction InfoCard(props) {\n  let { title, text, image, size } = props;\n  let imground = \"rounded-full\";\n  if (title === \"Memes\") {\n    imground = \"rounded-xl\";\n  }\n\n  size = size || \"text-xl\";\n  return (\n    <div\n      className={`yellow text-center p-2 sm:p-2 lg:p-4 rounded-2xl  mx-auto transparent  border-full`}\n    >\n      <div className=\"flex justify-evenly place-items-center\">\n        {title === \"Memes\" ? (\n          <div>\n            <img\n              className={`bg-white ${imground} w-64 h-64`}\n              src={image}\n              alt=\"\"\n            ></img>\n          </div>\n        ) : (\n          <div>\n            <h1\n              className={`bg-white sm:text-2xl text-bold rounded-2xl  px-3 sm:px-10 lg:px-24  p-3 sm:p-2 mb-2 md:px-14 font-bold text-sm `}\n            >\n              {title}\n            </h1>\n            <div className=\"flex place-items-center justify-evenly\">\n              <h3\n                className={`bg-white sm:${size} text-xs  rounded-3xl lg:px-10 p-1 sm:p-3 px-3  `}\n              >\n                {text}\n              </h3>\n              {image ? (\n                <img\n                  className={`bg-white p-0.5 ${imground} w-8 h-8 sm:w-16 sm:h-16 mx-3 `}\n                  src={image}\n                  alt=\"\"\n                ></img>\n              ) : (\n                <></>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App.js\";\nimport \"./index.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}