{"version":3,"sources":["config.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","REACT_APP_DB_URL","projectId","storageBucket","messagingSenderId","appId","measurementId","REACT_APP_MESG_ID","app","firebase","initializeApp","InfoCard","props","color","title","text","className","getAnalytics","App","dt","Date","useState","time","setTime","period","setPeriod","timeleft","setTimeleft","endof","date","getMonth","getDay","getFullYear","useEffect","interval","setInterval","toLocaleTimeString","clearInterval","checktime","minutes","getMinutes","total","getHours","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7fdd7c96.chunk.js","sourcesContent":["const firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain:process.env.REACT_APP_AUTH_DOM ,\r\n    databaseURL: process.env.REACT_APP_DB_URL,\r\n    projectId: process.env.REACT_APP_PRJ_ID,\r\n    storageBucket:process.env.REACT_APP_STG_BKT ,\r\n    messagingSenderId: process.env.REACT_APP_MSG_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MESG_ID\r\n  };\r\n  export default firebaseConfig;","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport firebaseConfig from \"./config\";\nimport firebase from \"firebase/compat/app\";\nimport { getAnalytics } from \"firebase/analytics\";\n\nconst app = firebase.initializeApp(firebaseConfig);\ngetAnalytics(app);\n\nfunction App() {\n  let dt = new Date(); //example time 'December 17, 1995 09:52:00'\n  const [time, setTime] = useState(0);\n  let [period, setPeriod] = useState(0);\n  let [timeleft, setTimeleft] = useState(0);\n  const endof = [806, 857, 951, 1042, 1207, 1258, 1349, 1440];\n  let date = `${dt.getMonth() + 1}/${dt.getDay()}/${dt.getFullYear()}`;\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      setTime(dt.toLocaleTimeString());\n\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    checktime();\n  }, [time]);\n\n  const checktime = () => {\n\n    let minutes = dt.getMinutes();\n    if (dt.getMinutes() < 10) {\n      minutes = \"0\" + minutes;\n    }\n    //gets period\n    let total = dt.getHours() + \"\" + minutes;\n    if (total >= 720 && total <= 1440) {\n      if (total >= 720 && total <= 806) {\n        setPeriod(1);\n      }\n      if (total >= 806 && total <= 857) {\n        setPeriod(2);\n      }\n      if (total >= 902 && total <= 951) {\n        setPeriod(3);\n      }\n      if (total >= 956 && total <= 1042) {\n        setPeriod(4);\n      }\n      if (total >= 1047 && total <= 1207) {\n        setPeriod(5);\n      }\n      if (total >= 1212 && total <= 1258) {\n        setPeriod(6);\n      }\n      if (total >= 1303 && total <= 1349) {\n        setPeriod(7);\n      }\n      if (total >= 1354 && total <= 1440) {\n        setPeriod(8);\n      } else {\n        setPeriod(\"In Between bells\");\n      }\n    } else {\n      setPeriod(\"Out of School\");\n    }\n      //time left\n    if (total >= 720 && total <= 1440) {\n      if (period == 0) {\n        setTimeleft(`${endof[0] - total} min`);\n      } else if (period !=='In Between bells') {\n        setTimeleft(`${endof[period- 1] - total}`);\n      }\n      else {\n        setTimeleft(\"You're here in time\");\n      }\n    } else {\n      setTimeleft(\"School is done\");\n    }\n  };\n\n  return (\n    <div className={` bg-blue-200`}>\n      <header className=\"bg-yellow-600 p-3 text-center rounded-b-3xl mb-6 justify-center\">\n        <div className=\"bg-yellow-400 p-1.5 text-center rounded-3xl justify-center\">\n          <div className=\"flex justify-center p-2\">\n            <button className=\" text-3xl font-bold rounded-3xl px-10 p-3 bg-yellow-200\" onClick={checktime}>\n              MISD Time\n            </button>\n          </div>\n          <div className=\"flex justify-center p-2\">\n            <h1 className=\"rounded-3xl px-5 p-2 bg-yellow-200 font font-light\">\n              Made By Drew Ronsman\n            </h1>\n          </div>\n        </div>\n      </header>\n      <main>\n        <div className=\"justify-evenly flex\">\n          <InfoCard color=\"blue\" title=\"Date\" text={date} />\n          <InfoCard color=\"red\" title=\"Time\" text={time} />\n        </div>\n        <div className=\"justify-evenly flex\">\n          <InfoCard color=\"green\" title=\"Period\" text={period} />\n          <InfoCard color=\"pink\" title=\"Time Left\" text={timeleft} />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nfunction InfoCard(props) {\n  const {color, title, text} = props;\n  return (\n    <div className={`p-3 lg:p-5 bg-${color}-800 rounded-3xl mb-5`}>\n      <div\n        className={`bg-${color}-600 text-center p-3 lg:p-5 rounded-2xl  mx-auto`}\n      >\n        <div className=\"flex justify-center p-2\">\n          <h1\n            className={`text-2xl text-bold rounded-2xl  px-10 md:px-10 p-2 bg-${color}-300 font font-bold`}\n          >\n            {title}\n          </h1>\n        </div>\n        <div className=\"flex justify-center\">\n          <h3\n            className={`text-xl text-bold bg-${color}-200 rounded-3xl lg:px-56 p-3 font-light`}\n          >\n            {text}\n          </h3>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}