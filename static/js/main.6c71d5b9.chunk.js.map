{"version":3,"sources":["config.js","img.png","components/IndexCard.js","App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","REACT_APP_DB_URL","projectId","storageBucket","messagingSenderId","appId","measurementId","REACT_APP_MESG_ID","InfoCard","props","title","text","image","size","imground","className","src","alt","app","firebase","initializeApp","Home","useState","Date","toLocaleDateString","date","setDate","weather","setWeather","time","setTime","period","setPeriod","timeleft","setTimeleft","selectedOption1","setSelectedOption1","selectedOption2","setSelectedOption2","meme","setMeme","quote","setQuote","endOf","setEndOf","startOf","setStartOf","useEffect","getWeather","interval","setInterval","toLocaleTimeString","clearInterval","checktime","startMin","convertSchedule","endMin","startActMin","endActMin","getMeme","getQuote","a","fetch","Math","floor","random","then","data","response","json","length","res","list","map","min","parseInt","split","total","getHours","getMinutes","Fragment","value","onChange","e","target","style","backgroundImage","img","backgroundRepeat","backgroundPositionX","backgroundSize","main","round","temp","icon","author","url","getAnalytics","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c71d5b9.chunk.js","sourcesContent":["const firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain:process.env.REACT_APP_AUTH_DOM ,\r\n    databaseURL: process.env.REACT_APP_DB_URL,\r\n    projectId: process.env.REACT_APP_PRJ_ID,\r\n    storageBucket:process.env.REACT_APP_STG_BKT ,\r\n    messagingSenderId: process.env.REACT_APP_MSG_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MESG_ID\r\n  };\r\n  export default firebaseConfig;","export default __webpack_public_path__ + \"static/media/img.20ce4e42.png\";","export default function InfoCard(props) {\r\n    let { title, text, image, size } = props;\r\n    let imground = \"rounded-full\";\r\n    if (title === \"Memes\") {\r\n      imground = \"rounded-xl\";\r\n    }\r\n  \r\n    size = size || \"text-xl\";\r\n    return (\r\n      <div\r\n        className={`yellow text-center p-2 sm:p-2 lg:p-4 rounded-2xl  mx-auto transparent  border-full`}\r\n      >\r\n        <div className=\"flex justify-evenly place-items-center\">\r\n          {title === \"Memes\" ? (\r\n            <div>\r\n              <img\r\n                className={`bg-white ${imground} w-64 h-64`}\r\n                src={image}\r\n                alt=\"\"\r\n              ></img>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <h1\r\n                className={`bg-white sm:text-2xl text-bold rounded-2xl  px-3 sm:px-10 lg:px-24  p-3 sm:p-2 mb-2 md:px-14 font-bold text-sm `}\r\n              >\r\n                {title}\r\n              </h1>\r\n              <div className=\"flex place-items-center justify-evenly\">\r\n                <h3\r\n                  className={`bg-white sm:${size} text-xs  rounded-3xl lg:px-10 p-1 sm:p-3 px-3  `}\r\n                >\r\n                  {text}\r\n                </h3>\r\n                {image ? (\r\n                  <img\r\n                    className={`bg-white p-0.5 ${imground} w-8 h-8 sm:w-16 sm:h-16 mx-3 `}\r\n                    src={image}\r\n                    alt=\"\"\r\n                  ></img>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }","import React, { useState, useEffect } from \"react\";\nimport firebaseConfig from \"./config\";\nimport firebase from \"firebase/compat/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport \"./styles/App.css\";\nimport img from \"./img.png\";\n\nimport InfoCard from \"./components/IndexCard\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst app = firebase.initializeApp(firebaseConfig);\ngetAnalytics(app);\nfunction Home() {\n  //example time 'December 17, 1995 09:52:00'\n  const [date, setDate] = useState(new Date().toLocaleDateString());\n  const [weather, setWeather] = useState({});\n  const [time, setTime] = useState(\"Loading...\");\n  const [period, setPeriod] = useState(\"Loading...\");\n  const [timeleft, setTimeleft] = useState(\"Loading...\");\n  const [selectedOption1, setSelectedOption1] = useState(\"Regular\");\n  const [selectedOption2, setSelectedOption2] = useState(\"Quote\");\n  const [meme, setMeme] = useState(\"Loading...\");\n  const [quote, setQuote] = useState(\"Loading...\");\n\n  const [endOf, setEndOf] = useState([]);\n  const [startOf, setStartOf] = useState([]);\n\n  useEffect(() => {\n    setWeather(getWeather());\n  }, []);\n  useEffect(() => {\n    setDate(new Date().toLocaleDateString());\n    let interval = setInterval(() => {\n      setTime(new Date().toLocaleTimeString());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    checktime();\n    // eslint-disable-next-line\n  }, [time]);\n  useEffect(() => {\n    const startMin = convertSchedule([\n      \"7:20\",\n      \"8:11\",\n      \"9:02\",\n      \"9:56\",\n      \"10:47\",\n      \"12:12\",\n      \"13:03\",\n      \"13:54\",\n    ]);\n    const endMin = convertSchedule([\n      \"8:06\",\n      \"8:57\",\n      \"9:51\",\n      \"10:42\",\n      \"12:07\",\n      \"12:58\",\n      \"13:49\",\n      \"14:40\",\n    ]);\n\n    const startActMin = convertSchedule([\n      \"7:20\",\n      \"8:06\",\n      \"8:52\",\n      \"9:43\",\n      \"10:29\",\n      \"11:57\",\n      \"12:43\",\n      \"13:24\",\n      \"14:10\",\n    ]);\n    const endActMin = convertSchedule([\n      \"8:01\",\n      \"8:47\",\n      \"9:38\",\n      \"10:24\",\n      \"11:49\",\n      \"12:38\",\n      \"13:24\",\n      \"14:10\",\n      \"14:40\",\n    ]); //need to do this\n\n    if (selectedOption1 === \"Regular\") {\n      setEndOf(endMin);\n      setStartOf(startMin);\n    } else if (selectedOption1 === \"Activity\") {\n      setEndOf(endActMin);\n      setStartOf(startActMin);\n    }\n  }, [selectedOption1]);\n  useEffect(() => {\n    if (selectedOption2 === \"Memes\") {\n      getMeme();\n    } else if (selectedOption2 === \"Quote\") {\n      getQuote();\n    }\n  }, [selectedOption2]);\n\n  const getMeme = async () => {\n    await fetch(\n      `https://MemeApi.neoprint777.repl.co/Memes?number=${Math.floor(\n        Math.random() * 23\n      )}`\n    ).then((data) => setMeme(data));\n  };\n\n  const getQuote = async () => {\n    await fetch(\"https://type.fit/api/quotes\")\n      .then((response) => response.json())\n      .then((data) => setQuote(data[Math.floor(Math.random() * data.length)]));\n  };\n\n  const getWeather = async () => {\n    fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=Conroe,Texas&units=imperial&appid=${process.env.REACT_APP_W_API_KEY}`\n    )\n      .then((res) => res.json())\n      .then((data) => setWeather(data));\n  };\n\n  function convertSchedule(list) {\n    return list.map(\n      (min) => parseInt(min.split(\":\")[0] * 60) + parseInt(min.split(\":\")[1])\n    );\n  }\n  const checktime = () => {\n    //gets period\n\n    let total = new Date().getHours() * 60 + new Date().getMinutes();\n    if (total >= startOf[0] && total <= endOf[endOf.length - 1]) {\n      if (total >= startOf[0] && total <= endOf[0]) {\n        setPeriod(1);\n      } else if (total >= startOf[1] && total <= endOf[1]) {\n        setPeriod(2);\n      } else if (total >= startOf[2] && total <= endOf[2]) {\n        setPeriod(3);\n      } else if (total >= startOf[3] && total <= endOf[3]) {\n        setPeriod(4);\n      } else if (total >= startOf[4] && total <= endOf[4]) {\n        setPeriod(5);\n      } else if (total >= startOf[5] && total <= endOf[5]) {\n        setPeriod(6);\n      } else if (total >= startOf[6] && total <= endOf[6]) {\n        setPeriod(7);\n      } else if (total >= startOf[7] && total <= endOf[7]) {\n        setPeriod(8);\n      } else if (startOf.length === 9 && endOf === 9) {\n        if (total >= startOf[8] && total <= endOf[8]) {\n          setPeriod(\"Activity\");\n        }\n      } else {\n        setPeriod(\"In between bells\");\n      }\n    }\n    //time left\n\n    if (total >= startOf[0] && total <= endOf[endOf.length - 1]) {\n      if (period === 1) {\n        setTimeleft(`${endOf[0] - total} min`);\n      } else if (period !== \"In between bells\") {\n        setTimeleft(`${endOf[period - 1] - total} min`);\n      } else {\n        setTimeleft(\"You made it on time\");\n      }\n    }\n  };\n  return (\n    <React.Fragment>\n      <div className=\"blue page-container\">\n        <div className=\"content-wrap\">\n          <div className=\"border-full yellow px-2 pb-3 rounded-3xl text-md font-light \">\n            <div className=\"flex justify-center \">\n              <button\n                className={`px-32 text-center text-3xl font-bold bg-white rounded-3xl p-3 mt-5 `}\n              >\n                Lake Creek\n              </button>\n            </div>\n            <div className=\"flex justify-center mt-3\">\n              <select\n                className={`rounded-3xl p-2 bg-white mr-3`}\n                value={selectedOption1}\n                onChange={(e) => setSelectedOption1(e.target.value)}\n              >\n                <option value=\"Regular\">Regular</option>\n                <option value=\"Activity\">Activity</option>\n              </select>\n              <select\n                className={`rounded-3xl p-2 bg-white mr-3`}\n                value={selectedOption2}\n                onChange={(e) => setSelectedOption2(e.target.value)}\n              >\n                <option value=\"Quote\">Quote</option>\n                <option value=\"Memes\">Memes</option>\n              </select>\n            </div>\n          </div>\n          <div\n            style={{\n              backgroundImage: `url(${img})`,\n              backgroundRepeat: \"no-repeat\",\n              backgroundPositionX: \"center\",\n              backgroundSize: \"350px\",\n            }}\n            alt=\"Lake Creek\"\n  \n          >\n            <div\n              className={`justify-evenly grid gap-x-3 gap-y-4 grid-cols-3 place-items-center mt-3`}\n            >\n              <InfoCard title={`Time`} text={time} />\n              <InfoCard\n                title={`Weather`}\n                text={\n                  weather.main\n                    ? `${Math.round(weather.main.temp)} °F`\n                    : `loading`\n                }\n                image={\n                  weather.weather\n                    ? `http://openweathermap.org/img/w/${weather.weather[0].icon}.png`\n                    : 0\n                }\n              />\n              <InfoCard title={`Date`} text={date} />\n              <InfoCard title={`Period`} text={period} />\n              {selectedOption2 === \"Quote\" ? (\n                <InfoCard\n                  title={`Quote`}\n                  text={`\"${quote.text}\" -${quote.author || \"unknown\"}`}\n                  size=\"text-xs\"\n                />\n              ) : (\n                <InfoCard title=\"Memes\" image={`${meme.url}`} />\n              )}\n              <InfoCard title={`Class Ends`} text={timeleft} />\n            </div>\n          </div>\n        </div>\n        <footer className=\"flex justify-evenly mb-auto yellow p-2 font-bold text-blue-200 border-top rounded-t-3xl footer\">\n          Made by NP3D\n        </footer>\n      </div>\n    </React.Fragment>\n  );\n}\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/timer\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles/index.css\";\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}